<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title>管理テーブルのバックアップ</title>
        <link rel="stylesheet" href="/css/style.css" />
        <style>
            div#app {
                margin-left:20%;
                margin-top:50px;
            }
        </style>
        <script src="/js/vue.js"></script>
    </head>
    <body>
        <h1><a href="/"><img src="/img/home_orange.png" /></a>&nbsp;管理テーブルのバックアップ</h1>
        <p class="comment">画像管理テーブル等をバックアップします。バックアップテーブルは「元のテーブル名Bak世代番号」となります。（例）PicturesBak10</p>
        <div id="app">
            <div class="form_row">
                <div class="form_item">世代番号</div>
                <div class="form_item">
                    <input type="number" v-model="age" />&nbsp;
                    <input type="button" v-on:click="backupButton_click" value=" バックアップを実行する " /></div>
            </div>
            <div class="message"><%= message %></div>
            <div class="message" v-text="message"></div>
            <br />
            <h4>既存のバックアップテーブル一覧 (<a href="javascript:location.reload()">表示を更新する</a>)</h4>
            <ul>
                <% for (let a of result) { %>
                    <li><%= a %></li>
                <% } %>
            </ul>
        </div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <script>
            const app = new Vue({
                el: "#app",
                data: {
                    age: 1,
                    message: ""
                },
                methods: {
                    backupButton_click: () =>{
                        fetch("/extra/createBackupTables?age=" + app.age)
                        .catch(err => app.message = err.message)
                        .then(data => data.text())
                        .catch(err => app.message = err.message)
                        .then(text => app.message = text);
                    }
                }
            });
        </script>
    </body>
</html>