<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width,initial-scale=1" />
        <title>MyPC Wiki の追加・更新</title>
        <link rel="stylesheet" href="/css/style.css" />
        <style>
            form {
                margin-left: 10%;
            }
            fieldset {
                border-width: 0px;
                margin-bottom: 4px;
            }
            .label {
                font-size: 10pt;
                color:royalblue;
            }
        </style>
        <script src="/js/private.js"></script>
        <script>
            // 送信ボタンがクリックされたとき
            function submitClick() {
                if (!form1.title.value) {
                    alert("タイトルが空欄です。");
                    return;
                }
                if (!form1.content.value) {
                    alert("内容が空欄です。");
                    return;
                }
                form1.submit();
            }

            // データ確認ボタンがクリックされたとき
            function confirmClick() {
                if (!form1.id.value) {
                    alert("id が空欄です。");
                    return;
                }
                const message = document.getElementById("message");
                fetch("/extra/getWikiData?id=" + form1.id.value)
                .then(res => res.json())
                .then(data => {
                    form1.id.value = data.id;
                    form1.title.value = data.title;
                    form1.author.value = data.author;
                    form1.content.value = data.content;
                    if (data.hidden) {
                        form1.hidden.setAttribute("checked", "checked");
                    }
                    else {
                        form1.hidden.removeAttribute("checked");
                    }
                    form1.type.value = data.type;
                    form1.revision.value = data.revision;
                    message.innerText = "";
                })
                .catch(err => message.innerText = err.message);
            }

            // クリアボタンがクリックされたとき
            function clearClick() {
                form1.id.value = "";
                form1.title.value = "";
                form1.author.value = "";
                form1.hidden.removeAttribute("checked");
                form1.type.value = "";
                form1.revision.value = "0";
                form1.content.value = "";
            }

            // HTML 作成ボタンがクリックされたとき
            function makeButtonClick() {
                let html = "";
                const item = form2.itemHtml.value;
                const params = form2.params.value.trim();
                const htmlArea = document.getElementById("html");
                if (params == "") {
                    alert("パラメータが空欄です。");
                    return;
                }
                switch (item) {
                    case "picture": {
                        const paths = params.split(/\n/g);
                        for (let p of paths) {
                            p = p.replace(/\\/g, "/");
                            p = stripDblQuote(p);
                            html += `<a href="/sendfile?path=${p}"><img src="/sendfile?path=${p}" style="width:160px;" /></a>\n`;
                        }
                    }
                    break;
                    case "folder": {
                        const paths = params.split(/\n/g);
                        for (let p of paths) {
                            p = p.replace(/\\/g, "/");
                            p = stripDblQuote(p);
                            html += `<li><a href="/pictures/showPictures?path=${p}">${p}</a></li>\n`;
                        }
                    }
                    break;
                    case "folder2": {
                        const paths = params.split(/\n/g);
                        for (let p of paths) {
                            p = p.replace(/\\/g, "/");
                            let q = p.split(",");
                            let dir = stripDblQuote(q[0]);
                            let img = stripDblQuote(q[1]);
                            html += `<li><a href="/pictures/showPictures?path=${dir}&sortdir=asc"><img src="/sendfile?path=${img}" /></a></li>\n`;
                        }
                    }
                    break;
                    case "picture2": {
                        const paths = params.split(/\n/g);
                        for (let p of paths) {
                            p = p.replace(/\\/g, "/");
                            let img = stripDblQuote(p);
                            html += `<a href="/pictures/showNavImage?path=${img}" target="_blank"><img src="/sendfile?path=${img}" width="320px" /></a>\n`;
                        }
                    }
                    break;
                    case "list": {
                        const n = parseInt(params);
                        html += "<ul>\n";
                        for (let i = 0; i < n; i++) {
                            html += "<li></li>\n";
                        }
                        html += "</ul>\n";
                    }
                    break;
                    case "table": {
                        const mn = params.split(/,/g);
                        const m = parseInt(mn[0]);
                        const n = parseInt(mn[1]);
                        html += "<table>\n<tr>";
                        for (j = 0; j < n; j++) {
                            html += "<th></th>";
                        }
                        html += "</tr>\n";
                        for (let i = 0; i < m; i++) {
                            html += "<tr>";
                            for (let j = 0; j < n; j++) {
                                html += "<td></td>";
                            }
                            html += "</tr>\n";
                        }
                        html += "</table>\n";
                    }
                    break;
                    case "video":
                        const ids = params.split(/\n/g);
                        html = "";
                        for (let j = 0; j < ids.length; j++) {
                            const vth = ids[j].split(/,/g);
                            html += `<a href="/videos/playForm/${vth[0]}"><img src="/extract/${vth[1]}" /></a>\n`;
                        }
                    break;
                    default:
                        alert("Fatal error");
                    break;
                }
                htmlArea.innerText = html;
            }

            // " でパスが囲まれていたら " を取り去る。
            function stripDblQuote(p) {
                if (p[0] == '"' && p[p.length-1] == '"') {
                    p = p.substring(1, p.length - 1);
                }
                return p;
            }

            // HTML クリアボタンがクリックされたとき
            function clearButtonClick() {
                form2.params.value = "";
                const htmlArea = document.getElementById("html");
                htmlArea.innerText = "";
            }
        </script>
    </head>

    <body>
        <header>
            <h1>MyPC Wiki の追加・更新</h1>
        </header>
        <br />
        <form id="form1" method="POST" action="/extra/wikiForm">
            <fieldset>
                <div class="label">id (注意) 空欄の場合は追加になります。</div>
                <div><input type="number" id="id" name="id" size="8" value="<%= data.id %>"></div>
            </fieldset>
            <fieldset>
                <div class="label">タイトル</div>
                <div><input type="text" id="title" name="title" size="80" value="<%= data.title %>"></div>
            </fieldset>
            <fieldset>
                <div class="label">投稿者</div>
                <div><input type="text" id="author" name="author" size="30" value="<%= data.author %>"></div>
            </fieldset>
            <fieldset>
                <div class="label">内容</div>
                <div><textarea id="content" name="content" cols="100" rows="10"><%= data.content %></textarea></div>
            </fieldset>
            <fieldset>
                <% if (data.hidden == "0") { %>
                    <div><input type="checkbox" id="hidden" name="hidden" value="hidden" /> この投稿は一覧に表示しない。</div>
                <% } else { %>
                    <div><input type="checkbox" id="hidden" name="hidden" value="hidden" checked="checked"> この投稿は一覧に表示しない。</div>
                <% } %>
            </fieldset>
            <fieldset>
                <div class="label">区分 (例) 画像追加、画像更新、バージョンアップ・・・</div>
                <div><input type="text" id="type" name="type" size="20" value="<%= data.type %>"></div>
            </fieldset>
            <fieldset>
                <div class="label">版数</div>
                <div><input type="number" id="revision" name="revision" size="5" value="<%= data.revision %>"></div>
            </fieldset>
            <fieldset style="margin-top:4px;">
                <div><input type="button" id="submitButton" value=" 送信 " onclick="javascript:submitClick()">&nbsp;<input type="button" id="confirmButton" value=" データ確認 " onclick="javascript:confirmClick()">&nbsp;<input type="button" id="clearButton" value=" クリア " onclick="javascript:clearClick()"></div>
            </fieldset>
        </form>
        <p id="message" class="message"><%= message %></p>
        <br />
        <h2 style="margin-left:10%;">HTML 要素の作成</h2>
        <form id="form2">
            <fieldset>
                <div>作成項目</div>
                <div><ul style="list-style-type: none;">
                    <li><input type="radio" id="itemHtml1" name="itemHtml" value="picture" checked="true" /> 画像表示</li>
                    <li><input type="radio" id="itemHtml21" name="itemHtml" value="folder" /> フォルダ内画像一覧 (リスト)</li>
                    <li><input type="radio" id="itemHtml22" name="itemHtml" value="folder2" /> フォルダ内画像一覧 (サムネール)</li>
                    <li><input type="radio" id="itemHtml23" name="itemHtml" value="picture2" /> 画像一覧 (サムネール Navigation)</li>
                    <li><input type="radio" id="itemHtml3" name="itemHtml" value="list" /> リスト</li>
                    <li><input type="radio" id="itemHtml4" name="itemHtml" value="table" /> 表</li>
                    <li><input type="radio" id="itemHtml5" name="itemHtml" value="video" /> ビデオの一覧</li>
                </ul></div>
            </fieldset>
            <fieldset>
                <div>パラメータ</div>
                <div>
                    <textarea id="params" cols="100" rows="8"></textarea>
                </div>
            </fieldset>
            <fieldset>
                <input type="button" id="makeButton" value=" 作成する " onclick="makeButtonClick()" />&nbsp;
                <input type="button" id="clearButton" value=" クリアする " onclick="clearButtonClick()" />
            </fieldset>
            <br />
            <pre id="html" style="color:firebrick;"></pre>
        </form>
        <h3 style="margin-left:10%;">ヘルプ</h3>
        <ul style="margin-left:10%; font-size:10pt;">
            <li>画像表示<br />画像の絶対パス (複数可能) をパラメータに設定する。</li>
            <li>フォルダ内画像一覧<br />画像フォルダの絶対パス (複数可能) をカンマ区切りでパラメータに設定する。</li>
            <li>フォルダ内画像一覧 (サムネール)<br />画像フォルダの絶対パス (複数可能) とサムネール用画像の絶対パスをカンマ区切りでパラメータに設定する。</li>
            <li>フォルダ内画像一覧 (サムネール Navigation)<br />画像ファイルの絶対パス (複数可能)パラメータに設定する。</li>
            <li>リスト<br />リストの行数をパラメータに設定する。</li>
            <li>テーブル<br />表の行と列数をカンマ区切りでに設定する。</li>
            <li>ビデオの一覧<br />ビデオの ID とサムネール画像の ID をカンマ区切りでパラメータに設定する。</li>
        </ul>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
    </body>
</html>